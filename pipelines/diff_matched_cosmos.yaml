description: Catalog matching and analysis for HSC with COSMOS
parameters:
  bands_match: ["g", "r", "i", "z", "y"]
  bands_match_acs: ["i"]
  cosmos2020_coord_ra: "ALPHA_J2000"
  cosmos2020_coord_dec: "DELTA_J2000"
  cosmos_acs_coord_ra: "ra"
  cosmos_acs_coord_dec: "dec"
tasks:
  matchObjectToCosmos2020:
    class: lsst.pipe.tasks.match_tract_catalog.MatchTractCatalogTask
    config:
      connections.name_input_cat_ref: cosmos2020_classic_v2p2
      match_tract_catalog.coord_format.column_ref_coord1: parameters.cosmos2020_coord_ra
      match_tract_catalog.coord_format.column_ref_coord2: parameters.cosmos2020_coord_dec
      refcat_sharding_type: "none"
      python: |
        # Target settings are likely common to all object tables
        from lsst.pipe.tasks.match_tract_catalog_probabilistic import MatchTractCatalogProbabilisticTask
        
        config.match_tract_catalog.retarget(MatchTractCatalogProbabilisticTask)
        fluxes_ref = [f"HSC_{band}_FLUX_AUTO" for band in parameters.bands_match]
        config.match_tract_catalog.columns_ref_flux = fluxes_ref
        config.match_tract_catalog.columns_ref_meas = [
          parameters.cosmos2020_coord_ra, parameters.cosmos2020_coord_dec,
        ] + fluxes_ref
        fluxes_meas = [f"{band}_cModelFlux" for band in parameters.bands_match]
        columns_meas = ["coord_ra", "coord_dec"] + fluxes_meas
        config.match_tract_catalog.columns_target_meas = columns_meas
        config.match_tract_catalog.columns_target_err = [f"{col}Err" for col in columns_meas]
        # Might need adjusting for different survey depths
        config.match_tract_catalog.mag_faintest_ref = 27.0
        config.match_tract_catalog.columns_ref_copy = ["ID"]
        config.match_tract_catalog.columns_target_copy = ["objectId"]
  compareObjectToCosmos2020:
    class: lsst.pipe.tasks.diff_matched_tract_catalog.DiffMatchedTractCatalogTask
    config:
      column_ref_extended: "FLAG_HSC"
      columns_target_coord_err: ["coord_raErr", "coord_decErr"]
      connections.name_input_cat_ref: cosmos2020_classic_v2p2
      coord_format.column_ref_coord1: parameters.cosmos2020_coord_ra
      coord_format.column_ref_coord2: parameters.cosmos2020_coord_dec
      include_unmatched: true
      refcat_sharding_type: "none"

      python: |
        from lsst.pipe.tasks.diff_matched_tract_catalog import MatchedCatalogFluxesConfig
        columns_flux = {}
        fluxes_meas_psf = []
        for band in parameters.bands_match:
            columns_flux[band] = MatchedCatalogFluxesConfig(
                column_ref_flux=f"HSC_{band}_FLUX_AUTO",
                columns_target_flux=[f"{band}_cModelFlux",],
                columns_target_flux_err=[f"{band}_cModelFluxErr",],
            )
            fluxes_meas_psf.append(f"{band}_psfFlux")
        config.columns_flux = columns_flux
        config.columns_ref_copy = ["FLAG_HSC", "FLAG_COMBINED", "lp_type"]
        config.columns_target_copy = ["patch"] + fluxes_meas_psf + [
          f"{col}Err" for col in fluxes_meas_psf
        ]
  matchObjectToCosmosAcs:
    class: lsst.pipe.tasks.match_tract_catalog.MatchTractCatalogTask
    config:
      connections.name_input_cat_ref: cosmos_acs_iphot_200709
      match_tract_catalog.coord_format.column_ref_coord1: parameters.cosmos_acs_coord_ra
      match_tract_catalog.coord_format.column_ref_coord2: parameters.cosmos_acs_coord_dec
      refcat_sharding_type: "none"
      python: |
        # Target settings are likely common to all object tables
        from lsst.pipe.tasks.match_tract_catalog_probabilistic import MatchTractCatalogProbabilisticTask
        
        config.match_tract_catalog.retarget(MatchTractCatalogProbabilisticTask)
        
        fluxes_ref = ["flux_auto"]
        config.match_tract_catalog.columns_ref_flux = fluxes_ref
        config.match_tract_catalog.columns_ref_meas = [
          parameters.cosmos_acs_coord_ra, parameters.cosmos_acs_coord_dec,
        ] + fluxes_ref
        fluxes_meas = [f"{band}_cModelFlux" for band in parameters.bands_match_acs]
        columns_meas = ["coord_ra", "coord_dec"] + fluxes_meas
        config.match_tract_catalog.columns_target_meas = columns_meas
        config.match_tract_catalog.columns_target_err = [f"{col}Err" for col in columns_meas]
        # Might need adjusting for different survey depths
        config.match_tract_catalog.mag_faintest_ref = 27.0
        config.match_tract_catalog.columns_ref_copy = ["mu_class", "number"]
        config.match_tract_catalog.columns_target_copy = ["objectId"]
  compareObjectToCosmosAcs:
    class: lsst.pipe.tasks.diff_matched_tract_catalog.DiffMatchedTractCatalogTask
    config:
      column_ref_extended: "mu_class"
      columns_target_coord_err: ["coord_raErr", "coord_decErr"]
      connections.name_input_cat_ref: cosmos_acs_iphot_200709
      coord_format.column_ref_coord1: parameters.cosmos_acs_coord_ra
      coord_format.column_ref_coord2: parameters.cosmos_acs_coord_dec
      include_unmatched: true
      refcat_sharding_type: "none"

      python: |
        from lsst.pipe.tasks.diff_matched_tract_catalog import MatchedCatalogFluxesConfig
        columns_flux = {}
        fluxes_meas_psf = []
        for band in parameters.bands_match_acs:
            columns_flux[band] = MatchedCatalogFluxesConfig(
                column_ref_flux=f"flux_auto",
                columns_target_flux=[f"{band}_cModelFlux",],
                columns_target_flux_err=[f"{band}_cModelFluxErr",],
            )
            fluxes_meas_psf.append(f"{band}_psfFlux")
        config.columns_flux = columns_flux
        config.columns_target_copy = ["patch"] + fluxes_meas_psf + [
          f"{col}Err" for col in fluxes_meas_psf
        ]